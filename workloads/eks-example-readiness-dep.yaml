---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eks-example-readiness
  namespace: eks-example-readiness
  labels:
    app: eks-example-readiness
  annotations:
    # Container Image Automated Updates
    flux.weave.works/automated: 'true'
    # do not apply this manifest on the cluster
    flux.weave.works/ignore: 'true'
spec:
  replicas: 1
  #
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 40%
      maxUnavailable: 0
  revisionHistoryLimit: 10
  #
  selector:
    matchLabels:
      app: eks-example-readiness
  template:
    metadata:
      labels:
        app: eks-example-readiness
    spec:
      containers:
        - name: eks-example-readiness
          image: 382076407153.dkr.ecr.eu-west-1.amazonaws.com/eks-example:a213b841
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          lifecycle:
            preStop:
              exec:
                command: ['sleep', '290']
      terminationGracePeriodSeconds: 300
      #https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-readiness-gate
      #https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/deploy/pod_readiness_gate/
      #For readiness gate configuration to be injected to the pod spec, you need to apply the label elbv2.k8s.aws/pod-readiness-gate-inject: enabled to the pod namespace
      #readinessGates:
      #  - conditionType: "www.example.com/feature-1"
